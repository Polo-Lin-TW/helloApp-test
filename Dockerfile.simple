# Simplified Dockerfile for Hello World Web App
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy and install backend dependencies
COPY backend/requirements.txt ./backend/
RUN pip install --no-cache-dir -r backend/requirements.txt

# Copy backend source code
COPY backend/ ./backend/

# Copy frontend files (development version)
COPY frontend/ ./frontend/

# Create startup script
COPY <<EOF /app/start.sh
#!/bin/bash
echo "Starting Hello World Web App..."
echo "================================"

# Start FastAPI backend in background
echo "Starting FastAPI backend on port 8000..."
cd /app/backend
uvicorn main:app --host 0.0.0.0 --port 8000 &
BACKEND_PID=\$!

# Wait for backend to start
sleep 3

# Start frontend server
echo "Starting frontend server on port 3000..."
cd /app/frontend
python3 -m http.server 3000 &
FRONTEND_PID=\$!

echo ""
echo "ðŸš€ Application is ready!"
echo "ðŸ“± Frontend: http://localhost:3000"
echo "ðŸ”§ Backend API: http://localhost:8000"
echo "ðŸ“š API Docs: http://localhost:8000/docs"

# Function to handle shutdown
cleanup() {
    echo "Shutting down..."
    kill \$BACKEND_PID \$FRONTEND_PID 2>/dev/null
    exit 0
}

trap cleanup SIGTERM SIGINT
wait
EOF

# Make startup script executable
RUN chmod +x /app/start.sh

# Expose ports
EXPOSE 3000 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start the application
ENTRYPOINT ["/app/start.sh"]